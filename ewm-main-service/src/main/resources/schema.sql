DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS compilations_events;
DROP TABLE IF EXISTS compilations;
DROP TABLE IF EXISTS requests;
DROP TABLE IF EXISTS events;
DROP TABLE IF EXISTS locations;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS categories;


CREATE TABLE IF NOT EXISTS users (
user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
user_name VARCHAR(250) NOT NULL,
user_email VARCHAR(254) NOT NULL,
CONSTRAINT UQ_USER_EMAIL UNIQUE (user_email)
);

CREATE TABLE IF NOT EXISTS categories (
category_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
category_name VARCHAR(50) NOT NULL,
CONSTRAINT UQ_CATEGORY_NAME UNIQUE (category_name)
);

CREATE TABLE IF NOT EXISTS locations (
location_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
latitude FLOAT NOT NULL,
longitude FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS events (
event_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
category_id BIGINT REFERENCES categories (category_id),
initiator_id BIGINT REFERENCES users (user_id),
location_id BIGINT REFERENCES locations (location_id),
title VARCHAR(120) NOT NULL,
annotation VARCHAR(2000) NOT NULL,
description VARCHAR(7000) NOT NULL,
created_on TIMESTAMP NOT NULL,
event_date TIMESTAMP NOT NULL,
paid BOOLEAN NOT NULL,
participant_limit BIGINT NOT NULL,
published_on TIMESTAMP,
request_moderation BOOLEAN NOT NULL,
state VARCHAR(32) NOT NULL
);

CREATE TABLE IF NOT EXISTS requests (
request_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
event_id BIGINT REFERENCES events (event_id),
user_id BIGINT REFERENCES users (user_id),
created TIMESTAMP NOT NULL,
status VARCHAR(32) NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations (
compilation_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
pinned BOOLEAN NOT NULL,
title VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations_events (
event_id BIGINT REFERENCES events (event_id) ON DELETE CASCADE,
compilation_id BIGINT REFERENCES compilations (compilation_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments (
comment_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
text VARCHAR(1000) NOT NULL,
event_id BIGINT REFERENCES events (event_id),
author_id BIGINT REFERENCES users (user_id),
created TIMESTAMP NOT NULL,
changed TIMESTAMP
);


